#!/usr/bin/env python3
# Software License Agreement (proprietary)
#
# \file      get_ros1_messages
# \authors   Paul Bovbel <pbovbel@locusrobotics.com>
# \copyright Copyright (c) (2017,), Locus Robotics, All rights reserved.
#
# Unauthorized copying of this file, via any medium, is strictly prohibited.
# Proprietary and confidential.

import argparse
import os
import sys

# add ros1_bridge to the Python path
package_root = os.path.join(os.path.dirname(__file__), '..')
sys.path.insert(0, os.path.abspath(package_root))
from ros1_message_mirror import get_ros1_message_paths


def main(argv=sys.argv[1:]):
    parser = argparse.ArgumentParser(
        description='Enumerate ros1 message artifacts for a package.',
        formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument(
        'package',
        type=str,
        help='The package where to locate messages.')
    parser.add_argument(
        '--type',
        required=True,
        type=str,
        choices=['msg', 'srv'],
        help='The type of message to search for.')
    args = parser.parse_args(argv)

    try:
        paths = get_ros1_message_paths(
            args.package,
            args.type,
        )
        print(";".join(paths))
    except RuntimeError as e:
        print(str(e), file=sys.stderr)
        return 1


if __name__ == '__main__':
    sys.exit(main())
