#!/usr/bin/env python3

import argparse
import pathlib
import re
import sys


def main(argv=sys.argv[1:]):
    parser = argparse.ArgumentParser(
        description='Convert a ROS1 message into a ROS2 compatible definition.',
        formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument(
        'input',
        type=pathlib.Path,
        help='Input message file.')
    parser.add_argument(
        'output',
        type=pathlib.Path,
        help='Output message file.')
    args = parser.parse_args(argv)

    try:
        # TODO(pbovbel) read mappings from ros1_bridge
        patterns = {
          '^time': 'builtin_interfaces/Time',
          'std_msgs/Time': 'builtin_interfaces/Time',
          '^duration': 'builtin_interfaces/Duration',
          '^Header': 'std_msgs/Header',
          '^uuid_msgs/UniqueID': 'unique_identifier_msgs/UUID',
        }

        contents = []
        for line in args.input.read_text().splitlines():
          for pattern, substitution in patterns.items():
            line = re.sub(
              pattern=pattern,
              repl=substitution,
              string=line,
            )
          contents.append(line)
        args.output.write_text('\n'.join(contents))
        split_path = str(args.output).rsplit('/', 2)

        # rosidl no longer supports /an/absolute/msg/path.msg, it wants /an/absolute:msg/path.msg
        print(split_path[0] + ':' + split_path[1] + '/' + split_path[2])

    except RuntimeError as e:
        print(str(e), file=sys.stderr)
        return 1


if __name__ == '__main__':
    sys.exit(main())
